// brute force.. O(N2) complexity!!

class Solution {
public:

int countset(int number){
    int count=0;
    while (number){
        if (number&1){
            count++;
        }
        number=number>>1;
    }
    return count;
};
    vector<int> countBits(int n) {
        vector<int> arr;
        for (int i=0;i<n+1;i++ ){
            arr.push_back(countset(i));
        } return arr;

    }
};

// optimal solution???

using bit manipulation and DP;
class Solution {
public:

    vector<int> countBits(int n) {
        vector<int> arr(n+1,0);
        for (int i=1;i<n+1;i++){
            arr[i]= arr[i>>1]+(i&1);
        }
return arr;
    }
};
